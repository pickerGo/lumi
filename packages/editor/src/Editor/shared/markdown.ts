
export const hasMarkdownSyntax = (text: string) => {
    // 更全面的 Markdown 语法检测
    const markdownPatterns = [
        // 标题语法 (# ## ### 等)
        /^#{1,6}\s+/m,
        
        // 列表语法 (- * + 1. 2. 等)
        /^[\-\*\+]\s+/m,
        /^\d+\.\s+/m,
        
        // 引用语法 (>)
        /^>\s+/m,
        
        // 代码块语法 (```)
        /```[\s\S]*?```/,
        
        // 行内代码语法 (`)
        /`[^`]+`/,
        
        // 粗体语法 (**text** 或 __text__)
        /\*\*[^*]+\*\*/,
        /__[^_]+__/,
        
        // 斜体语法 (*text* 或 _text_)
        /\*[^*]+\*/,
        /_[^_]+_/,
        
        // 删除线语法 (~~text~~)
        /~~[^~]+~~/,
        
        // 图片语法 (![alt](url))
        /!\[[^\]]*\]\([^)]+\)/,
        
        // 链接语法 ([text](url))
        /\[[^\]]*\]\([^)]+\)/,
        
        // 自动链接 (<url>)
        /<https?:\/\/[^\s>]+>/,
        
        // 水平分割线 (--- 或 *** 或 ___)
        /^[\-\*_]{3,}$/m,
        
        // 表格语法 (| 分隔)
        /^\|.*\|.*\|/m,
        
        // 任务列表语法 (- [ ] 或 - [x])
        /^[\-\*\+]\s+\[[\sxX]\]\s+/m,
        
        // 脚注语法 ([^1]:)
        /^\[\^[^\]]+\]:/m,
        
        // 定义列表语法 (:)
        /^[^:]+:\s+/m,
        
        // 高亮语法 (==text==)
        /==[^=]+==/,
        
        // 下标语法 (~text~)
        /~[^~]+~/,
        
        // 上标语法 (^text^)
        /\^[^^]+\^/,
        
        // 转义字符 (\)
        /\\[#\-\*\+\.\[\]\(\)\{\}\!\`]/,

        // 数学公式 ($...$ 或 $$...$$)
        /\$[^$]+\$/,
        /\$\$[^$]+\$\$/,
    ];
    
    return markdownPatterns.some(pattern => pattern.test(text));
}