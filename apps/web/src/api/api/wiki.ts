/* eslint-disable */
// @ts-nocheck

/**
 * generated by free-swagger
 * @see https://www.npmjs.com/package/free-swagger
 * @title Lumi API
 * @description Description
 * @version 1.0.0
}
**/

import { defHttp } from "../axios/http";
import type { RequestOptions } from "../axios/interface";

export const getWikis = (
  params: {
    spaceId?: string;
  },
  options: RequestOptions = {}
) => {
  if (window.isElectron) {
    return window.clientAPI.getWikis({
      ...params
    });
  }

  return defHttp.request<any>(
    {
      url: `/wikis`,
      method: "get",
      params: params,
      data: {}
    },
    options
  );
};

export const getWikiById = (
  params: { [key: string]: never },
  {
    id
  }: {
    id: string;
  },
  options: RequestOptions = {}
) => {
  if (window.isElectron) {
    return window.clientAPI.getWikiById({
      id
    });
  }

  return defHttp.request<any>(
    {
      url: `/wiki/${id}`,
      method: "get",
      params: {},
      data: {}
    },
    options
  );
};

export const deleteWikiById = (
  params: { [key: string]: never },
  {
    id
  }: {
    id: string;
  },
  options: RequestOptions = {}
) => {
  if (window.isElectron) {
    return window.clientAPI.deleteWikiById({
      id
    });
  }

  return defHttp.request<any>(
    {
      url: `/wiki/${id}`,
      method: "delete",
      params: {},
      data: {}
    },
    options
  );
};

export const putWikiById = (
  params: { title: any; desc: any; cover: any; tags: any },
  {
    id
  }: {
    id: string;
  },
  options: RequestOptions = {}
) => {
  if (window.isElectron) {
    return window.clientAPI.putWikiById({
      ...params,

      id
    });
  }

  return defHttp.request<any>(
    {
      url: `/wiki/${id}`,
      method: "put",
      params: {},
      data: params
    },
    options
  );
};

export const postWiki = (
  params: { space: any; title: any; desc: any; cover: any; tags: any },
  options: RequestOptions = {}
) => {
  if (window.isElectron) {
    return window.clientAPI.postWiki({
      ...params
    });
  }

  return defHttp.request<any>(
    {
      url: `/wiki`,
      method: "post",
      params: {},
      data: params
    },
    options
  );
};

export const postWikiFile = (
  params: { wikiId: any; type: any; parentId: any; content: any },
  options: RequestOptions = {}
) => {
  if (window.isElectron) {
    return window.clientAPI.postWikiFile({
      ...params
    });
  }

  return defHttp.request<any>(
    {
      url: `/wikiFile`,
      method: "post",
      params: {},
      data: params
    },
    options
  );
};

export const putWikiTitleById = (
  params: { title: any },
  {
    id
  }: {
    id: string;
  },
  options: RequestOptions = {}
) => {
  if (window.isElectron) {
    return window.clientAPI.putWikiTitleById({
      ...params,

      id
    });
  }

  return defHttp.request<any>(
    {
      url: `/wiki/title/${id}`,
      method: "put",
      params: {},
      data: params
    },
    options
  );
};

export const putWikiFavoriteById = (
  params: { favorite: any },
  {
    id
  }: {
    id: string;
  },
  options: RequestOptions = {}
) => {
  if (window.isElectron) {
    return window.clientAPI.putWikiFavoriteById({
      ...params,

      id
    });
  }

  return defHttp.request<any>(
    {
      url: `/wiki/favorite/${id}`,
      method: "put",
      params: {},
      data: params
    },
    options
  );
};

export const putWikiFilesById = (
  params: { files: any },
  {
    id
  }: {
    id: string;
  },
  options: RequestOptions = {}
) => {
  if (window.isElectron) {
    return window.clientAPI.putWikiFilesById({
      ...params,

      id
    });
  }

  return defHttp.request<any>(
    {
      url: `/wiki/files/${id}`,
      method: "put",
      params: {},
      data: params
    },
    options
  );
};

export const deleteWikiFilesById = (
  params: { fileId: any },
  {
    id
  }: {
    id: string;
  },
  options: RequestOptions = {}
) => {
  if (window.isElectron) {
    return window.clientAPI.deleteWikiFilesById({
      ...params,

      id
    });
  }

  return defHttp.request<any>(
    {
      url: `/wiki/files/${id}`,
      method: "delete",
      params: {},
      data: params
    },
    options
  );
};
